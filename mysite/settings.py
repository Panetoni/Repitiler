"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e3gq67_$!$&-$&veja6+rvx6f=g@rx%1(p_qr!5grtcy1xjr+m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'based-geneva.gl.at.ply.gg',
    '0.0.0.0',
    '200.239.134.154'
]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',             # Interface administrativa pronta do Django
    'django.contrib.auth',              # Sistema de autenticação e gerenciamento de usuários
    'django.contrib.contenttypes',      # Suporte a tipos genéricos de conteúdo
    'django.contrib.sessions',          # Gerenciamento de sessões para usuários
    'django.contrib.messages',          # Framework para mensagens temporárias (ex: notificações)
    'django.contrib.staticfiles',       # Gerenciamento de arquivos estáticos (CSS, JS, imagens)
    'django.contrib.sites',             # Suporte a múltiplos sites (necessário para allauth)
    
    'allauth',                         # Biblioteca principal para autenticação social e local
    'allauth.account',                 # Gerenciamento de contas locais (login, registro)
    'allauth.socialaccount',           # Suporte a autenticação via contas sociais (Google, Facebook, etc.)
    'allauth.socialaccount.providers.google',  # Provedor Google para login social
    
    # Aplicativos customizados do seu projeto
    'reptilerUser',                    # App que estende o User com dados adicionais
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',        # Segurança (ex: HTTPS, cabeçalhos)
    'django.contrib.sessions.middleware.SessionMiddleware', # Suporte a sessões por cookie
    'django.middleware.common.CommonMiddleware',             # Funções comuns (ex: URL trailing slash)
    'django.middleware.csrf.CsrfViewMiddleware',             # Proteção contra CSRF (ataques cross-site)
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Anexa o usuário autenticado à requisição
    'django.contrib.messages.middleware.MessageMiddleware',  # Gerencia mensagens entre views/templates
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # Proteção contra clickjacking (iframe)
    
    'allauth.account.middleware.AccountMiddleware'           # Middleware para integração do allauth
]


ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'



# Authentication settings for google
SITE_ID = 3

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
    },
}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)


ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
SOCIALACCOUNT_QUERY_EMAIL = True


LOGIN_REDIRECT_URL = 'dashboard'  # Redireciona para a página inicial após o login
ACCOUNT_LOGOUT_REDIRECT_URL = 'login'  # Redireciona para a página

#ACCOUNT_ADAPTER = 'reptilerUser.adapters.NoSignupLoginAdapter'
